{"version":3,"file":"static/js/396.32ef7d2a.chunk.js","mappings":"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","sources":["components/MovieReviews.jsx","services/APIService.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/APIService';\n\nexport default function MovieReviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieReviews(id) {\n      const response = await getMovieReviews(id);\n      setMovieReviews(response.results);\n      console.log(response.results);\n    }\n    fetchMovieReviews(movieId);\n  }, [movieId]);\n  return (\n    <ul>\n      {movieReviews.length > 0 ?\n      movieReviews.map(review => (\n        <li key={review.id}>\n          <h4>Author: {review.author}</h4>\n          <p>{review.content}</p>\n        </li>\n      ))\n      : <p>There are no reviews about this film yet.</p>}\n    </ul>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OGUzZjFhNWMzYmU3YjcyZWM4MjA1MWE5YTM1ZTlmYiIsInN1YiI6IjY0NmE3ZGRiZjg1OTU4MDE3NDA4MzAzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c1FUz_8z8vCObT-x5HWLuwQhDIDSQZJcUHKPD0QJOTU'\n  }\n};\n\nasync function getTrending() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieByID(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    );\n    const movie = await response.json();\n    \n    return movie\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBySearch(search) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieCast(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    const movieCast = await response.json();\n    return movieCast\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieReviews(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n      options\n    );\n    const reviews = await response.json();\n    return reviews\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {getTrending, getMovieByID, getMovieBySearch, getMovieCast, getMovieReviews};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieReviews","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","id","getMovieReviews","response","results","console","log","fetchMovieReviews","length","map","review","author","content","options","method","headers","accept","Authorization","getTrending","fetch","json","movies","error","getMovieByID","movie","getMovieBySearch","search","getMovieCast","movieCast","reviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
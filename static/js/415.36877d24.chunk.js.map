{"version":3,"file":"static/js/415.36877d24.chunk.js","mappings":"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","sources":["components/MovieList.jsx","pages/Home.jsx","services/APIService.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MovieList';\nimport {getTrending} from 'services/APIService';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchMovies() {\n      const films = await getTrending();\n      setMovies(films.results)\n    }\n    fetchMovies();\n  }, []);\n  return (\n      <section>\n        <h2>Trending movies</h2>\n        <MoviesList movies={movies} />\n      </section>\n      \n  ) \n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OGUzZjFhNWMzYmU3YjcyZWM4MjA1MWE5YTM1ZTlmYiIsInN1YiI6IjY0NmE3ZGRiZjg1OTU4MDE3NDA4MzAzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c1FUz_8z8vCObT-x5HWLuwQhDIDSQZJcUHKPD0QJOTU'\n  }\n};\n\nasync function getTrending() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieByID(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    );\n    const movie = await response.json();\n    \n    return movie\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBySearch(search) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieCast(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    const movieCast = await response.json();\n    return movieCast\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieReviews(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n      options\n    );\n    const reviews = await response.json();\n    return reviews\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {getTrending, getMovieByID, getMovieBySearch, getMovieCast, getMovieReviews};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","Home","useState","setMovies","useEffect","getTrending","films","results","fetchMovies","options","method","headers","accept","Authorization","fetch","response","json","console","error","getMovieByID","getMovieBySearch","search","getMovieCast","movieCast","getMovieReviews","reviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
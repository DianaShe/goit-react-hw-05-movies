{"version":3,"file":"static/js/43.8edb8e33.chunk.js","mappings":"+OAEaA,EAAYC,EAAAA,EAAAA,IAAH,kGASTC,EAAQD,EAAAA,EAAAA,KAAH,4D,SCTH,SAASE,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1BC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAE5DC,EAAG,yCAAqCN,GACxCO,EAAcF,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACpC,OACE,UAACf,EAAD,YACE,gBAAKgB,IAAKL,EAAKM,IAAKX,KACpB,4BACE,SAACJ,EAAD,UAAQI,KACR,UAACJ,EAAD,eAASK,EAAaW,MAAM,EAAG,GAA/B,QACA,wCAAgBC,KAAKC,MAAqB,GAAfZ,GAA3B,SACA,uCACA,uBAAIC,KACJ,sCACA,uBAAIG,EAAYS,KAAK,aAK5B,C,uCCfc,SAASC,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAUhD,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA8BC,GAA9B,wFACyBC,EAAAA,EAAAA,IAAaD,GADtC,OACQE,EADR,OAEEZ,EAASY,GAFX,4CADc,uBAAC,SAAD,2BAKdC,CAAeZ,EAChB,GAAE,CAACA,KAGF,4BACE,SAAC,KAAD,CAAMa,GAAIT,EAASU,QAAnB,qBACCnC,IAAS,SAACD,EAAD,CAAWC,MAAOA,KAC5B,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMkC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,KAAD,MAGL,C,sLCzCKE,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAJnB,SAQeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,MACrB,iEACAN,GAJN,cAEUJ,EAFV,gBAMyBA,EAASW,OANlC,cAMUC,EANV,yBAOWA,GAPX,kCASIC,QAAQC,MAAR,MATJ,0FAaef,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BgB,GAA5B,kGAE2BL,MAAM,sCAAD,OACYK,EADZ,mBAE1BX,GAJN,cAEUJ,EAFV,gBAMwBA,EAASW,OANjC,cAMU3C,EANV,yBAQWA,GARX,kCAUI6C,QAAQC,MAAR,MAVJ,0FAceE,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,kGAE2BP,MAAM,mDAAD,OACyBO,EADzB,8CAE1Bb,GAJN,cAEUJ,EAFV,gBAMyBA,EAASW,OANlC,cAMUC,EANV,yBAOWA,GAPX,kCASIC,QAAQC,MAAR,MATJ,0FAaeI,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BH,GAA5B,kGAE2BL,MAAM,sCAAD,OACYK,EADZ,2BAE1BX,GAJN,cAEUJ,EAFV,gBAM4BA,EAASW,OANrC,cAMUQ,EANV,yBAOWA,GAPX,kCASIN,QAAQC,MAAR,MATJ,0FAaeM,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BL,GAA/B,kGAE2BL,MAAM,sCAAD,OACYK,EADZ,2BAE1BX,GAJN,cAEUJ,EAFV,gBAM0BA,EAASW,OANnC,cAMUU,EANV,yBAOWA,GAPX,kCASIR,QAAQC,MAAR,MATJ,iF,sBC7DA,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB/B,EAAQgC,EAAKhC,KAInB,CAHE,MAAOgB,GAEP,YADAW,EAAOX,EAET,CACIgB,EAAKC,KACPP,EAAQ1B,GAERkC,QAAQR,QAAQ1B,GAAOmC,KAAKP,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAM5B,GACbwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ7B,EAClE,CACA,SAAS6B,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/APIService.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\ndisplay: flex;\n\n> img {\n    width: 200px;\n    margin-right: 20px;\n}\n`\n\nexport const Title = styled.span`\nfont-weight: 900;\nfont-size: 24px\n`","import { Container, Title } from \"./MovieCard.styled\";\n\nexport default function MovieCard({ movie }) {\n  const { poster_path, title, release_date, vote_average, overview, genres, } =\n    movie;\n  const url = `https://image.tmdb.org/t/p/w200${poster_path}`\n  const movieGenres = genres.map(genre => genre.name);\n  return (\n    <Container>\n      <img src={url} alt={title} />\n      <div>\n        <Title>{title}</Title>\n        <Title>({release_date.slice(0, 4)})</Title>\n        <p>User score: {Math.round(vote_average * 10)} %</p>\n        <h4>Overview:</h4>\n        <p>{overview}</p>\n        <h4>Genres: </h4>\n        <p>{movieGenres.join(', ')}</p>\n      </div>\n      \n    </Container>\n  );\n}\n","import MovieCard from \"components/MovieCard/MovieCard\";\nimport { useEffect, useRef, useState } from \"react\"\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { getMovieByID } from \"services/APIService\";\n\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null)\n  \n  const { movieId } = useParams()\n  const location = useLocation()\n\n  const backLink = useRef(location.state?.from ?? \"/\")\n\n  useEffect(() => {\n    async function fetchMovieById(value) {\n      const response = await getMovieByID(value);\n      setMovie(response)\n    }\n    fetchMovieById(movieId)\n  }, [movieId])\n  \n  return (\n    <div>\n      <Link to={backLink.current}>Go back</Link>\n      {movie && <MovieCard movie={movie}/>}\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" >Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>  \n      </div>\n      <Outlet />\n    </div>\n  )\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OGUzZjFhNWMzYmU3YjcyZWM4MjA1MWE5YTM1ZTlmYiIsInN1YiI6IjY0NmE3ZGRiZjg1OTU4MDE3NDA4MzAzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c1FUz_8z8vCObT-x5HWLuwQhDIDSQZJcUHKPD0QJOTU'\n  }\n};\n\nasync function getTrending() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieByID(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    );\n    const movie = await response.json();\n    \n    return movie\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBySearch(search) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieCast(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    const movieCast = await response.json();\n    return movieCast\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieReviews(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n      options\n    );\n    const reviews = await response.json();\n    return reviews\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {getTrending, getMovieByID, getMovieBySearch, getMovieCast, getMovieReviews};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Container","styled","Title","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","url","movieGenres","map","genre","name","src","alt","slice","Math","round","join","MovieDetails","useState","setMovie","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","value","getMovieByID","response","fetchMovieById","to","current","options","method","headers","accept","Authorization","getTrending","fetch","json","movies","console","error","id","getMovieBySearch","search","getMovieCast","movieCast","getMovieReviews","reviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
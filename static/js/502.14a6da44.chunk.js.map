{"version":3,"file":"static/js/502.14a6da44.chunk.js","mappings":"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","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","services/APIService.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Img = styled.img`\ndisplay: block;\nwidth: 100px;\nheight: 150px;\n`;\n\nexport const Subtitle = styled.p`\nfont-weight: 500\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/APIService';\nimport { Img, Subtitle } from './MovieCast.styled';\n\nexport default function MovieCast() {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n  const url = 'https://image.tmdb.org/t/p/w200'\n\n  useEffect(() => {\n    async function fetchMovieCast(id) {\n      const response = await getMovieCast(id);\n      setMovieCast(response.cast);\n    }\n    fetchMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieCast.map(actor => {\n          return (\n            <li key={actor.credit_id}>\n              <Img src={`${url}${actor.profile_path}`} alt={actor.name} />\n              <Subtitle>{actor.name}</Subtitle>\n              <Subtitle>Character: {actor.character}</Subtitle>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0OGUzZjFhNWMzYmU3YjcyZWM4MjA1MWE5YTM1ZTlmYiIsInN1YiI6IjY0NmE3ZGRiZjg1OTU4MDE3NDA4MzAzOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.c1FUz_8z8vCObT-x5HWLuwQhDIDSQZJcUHKPD0QJOTU'\n  }\n};\n\nasync function getTrending() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieByID(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    );\n    const movie = await response.json();\n    \n    return movie\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieBySearch(search) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${search}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieCast(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    );\n    const movieCast = await response.json();\n    return movieCast\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getMovieReviews(id) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n      options\n    );\n    const reviews = await response.json();\n    return reviews\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport {getTrending, getMovieByID, getMovieBySearch, getMovieCast, getMovieReviews};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Img","styled","Subtitle","MovieCast","useState","movieCast","setMovieCast","movieId","useParams","useEffect","id","getMovieCast","response","cast","fetchMovieCast","map","actor","src","profile_path","alt","name","character","credit_id","options","method","headers","accept","Authorization","getTrending","fetch","json","movies","console","error","getMovieByID","movie","getMovieBySearch","search","getMovieReviews","reviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}